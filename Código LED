#include <Adafruit_NeoPixel.h>

#define PIN 7
#define NUMPIXELS 128 // 2 matrizes 8x8 de LEDs
#define BRIGHTNESS 28

Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  pixels.begin(); // Inicializa a biblioteca NeoPixel.
  pixels.setBrightness(BRIGHTNESS);
}

void loop() {
  slowBlinkEyes();
}

void slowBlinkEyes() {
  // Definindo o padrão das pálpebras dos olhos

  int eyeOpen[8][8] = {
    {0, 0, 1, 1, 1, 1, 0, 0},
    {0, 1, 1, 1, 1, 1, 1, 0},
    {1, 1, 1, 0, 0, 1, 1, 1},
    {1, 1, 0, 2, 2, 0, 1, 1},
    {1, 1, 0, 2, 2, 0, 1, 1},
    {1, 1, 1, 0, 0, 1, 1, 1},
    {0, 1, 1, 1, 1, 1, 1, 0},
    {0, 0, 1, 1, 1, 1, 0, 0}
  };

  int eyeHalfClosed[8][8] = {
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 1, 1, 1, 1, 0, 0},
    {0, 1, 1, 1, 1, 1, 1, 0},
    {1, 1, 1, 0, 0, 1, 1, 1},
    {1, 1, 0, 2, 2, 0, 1, 1},
    {1, 1, 0, 2, 2, 0, 1, 1},
    {1, 1, 1, 0, 0, 1, 1, 1},
    {0, 1, 1, 1, 1, 1, 1, 0}
  };

  int eyeHalfClosed2[8][8] = {
   {0, 1, 1, 1, 1, 1, 1, 0},
   {1, 1, 1, 0, 0, 1, 1, 1},
   {1, 1, 0, 2, 2, 0, 1, 1},
   {1, 1, 0, 2, 2, 0, 1, 1},
   {1, 1, 1, 0, 0, 1, 1, 1},
   {0, 1, 1, 1, 1, 1, 1, 0},
   {0, 0, 1, 1, 1, 1, 0, 0},
   {0, 0, 0, 0, 0, 0, 0, 0}
  }; 

  int eyeClosed[8][8] = {
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0, 0, 0}
  };

  // Mostrar os diferentes estados das pálpebras com a pupila
  displayPattern(eyeOpen);
  delay(500); // Olhos abertos por 500ms

  displayPattern(eyeHalfClosed);
  delay(500); // Olhos meio fechados por 500ms

  displayPattern(eyeClosed);
  delay(100); // Olhos fechados por 500ms

  displayPattern(eyeHalfClosed);
  delay(500); // Olhos meio fechados por 500ms

  displayPattern(eyeOpen);
  delay(500); // Olhos abertos por 500ms

  displayPattern(eyeHalfClosed2);
  delay(500);

  displayPattern(eyeClosed);
  delay(100);

  displayPattern(eyeHalfClosed2);
  delay(500);

  displayPattern(eyeClosed);
  delay(100);

  displayPattern(eyeHalfClosed2);
  delay(500);

  displayPattern(eyeOpen);
  delay(500); 

  displayPattern(eyeHalfClosed2);
  delay(500);

  displayPattern(eyeOpen);
  delay(500);  

  displayPattern(eyeClosed);
  delay(100);

  displayPattern(eyeHalfClosed);
  delay(1000);

  displayPattern(eyeOpen);
  delay(500);

  displayPattern(eyeHalfClosed2);
  delay(500);

  displayPattern(eyeClosed);
  delay(200);

  displayPattern(eyeHalfClosed2);
  delay(1500);

  displayPattern(eyeOpen);
  delay(2500);

  displayPattern(eyeHalfClosed);
  delay(700);

  displayPattern(eyeClosed);
  delay(100);

  displayPattern(eyeHalfClosed);
  delay(300);

  displayPattern(eyeOpen);
  delay(500);
}

void displayPattern(int pattern[8][8]) {
  for (int y = 0; y < 8; y++) {
    for (int x = 0; x < 8; x++) {
      int pixelIndex1 = y * 8 + x;
      int pixelIndex2 = 64 + y * 8 + x;

      // Adapta a pupila ao padrão atual
      if (pattern[y][x] == 2) {
        pixels.setPixelColor(pixelIndex1, pixels.Color(210,105,30)); // Pupila azul
        pixels.setPixelColor(pixelIndex2, pixels.Color(210,105,30)); // Pupila azul
      } else if (pattern[y][x] == 1) {
        pixels.setPixelColor(pixelIndex1, pixels.Color(255, 255, 255)); // Olhos brancos
        pixels.setPixelColor(pixelIndex2, pixels.Color(255, 255, 255)); // Olhos brancos
      } else {
        pixels.setPixelColor(pixelIndex1, pixels.Color(0, 0, 0)); // LED apagado
        pixels.setPixelColor(pixelIndex2, pixels.Color(0, 0, 0)); // LED apagado
      }
    }
  }
  pixels.show();
}
